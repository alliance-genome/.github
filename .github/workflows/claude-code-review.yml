name: Claude Code Review (Reusable)

on:
  workflow_call:
    inputs:
      model:
        description: 'Claude model to use'
        required: false
        default: 'claude-sonnet-4-20250514'
        type: string
      max_turns:
        description: 'Maximum conversation turns'
        required: false
        default: '10'
        type: string
      review_focus:
        description: 'What to focus the review on'
        required: false
        default: 'critical bugs and database performance'
        type: string
      trigger_phrase:
        description: 'Phrase to trigger manual reviews'
        required: false
        default: '@claude'
        type: string
      use_zen_tools:
        description: 'Enable zen MCP tools for enhanced analysis'
        required: false
        default: true
        type: boolean
    secrets:
      ANTHROPIC_API_KEY:
        description: 'Anthropic API key for Claude'
        required: true
      GOOGLE_API_KEY:
        description: 'Google API key for Gemini models (zen tools)'
        required: false
      OPENAI_API_KEY:
        description: 'OpenAI API key for o3 models (zen tools)'
        required: false

jobs:
  claude-review:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      issues: write
    if: |
      github.event_name == 'pull_request' || 
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, inputs.trigger_phrase)) ||
      github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Claude Code Review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          trigger_phrase: ${{ inputs.trigger_phrase }}
          model: ${{ inputs.model }}
          max_turns: ${{ inputs.max_turns }}
          
          # Custom instructions for Alliance repositories
          custom_instructions: |
            You are reviewing code for an Alliance of Genome Resources application.
            
            FOCUS ONLY ON:
            1. Critical and blocking bugs that could cause data corruption or system failures
            2. Database performance issues (inefficient queries, N+1 problems, missing indexes)
            
            Keep reviews concise and actionable. Only flag serious issues that need immediate attention.
          
          # Direct prompt for automated reviews
          direct_prompt: |
            ${{ github.event_name == 'pull_request' && format('
            Review this PR focusing ONLY on:
            1. Critical and blocking bugs that could cause data corruption or system failures  
            2. Database performance issues (inefficient queries, N+1 problems, missing indexes)
            
            {0}
            Keep feedback concise and actionable.
            ', inputs.use_zen_tools && 'Use the zen codereview tool with o3 and gemini-2.5-pro models for enhanced analysis.' || '') || '' }}
          
          # MCP Configuration for Zen tools (if enabled)
          mcp_config: |
            ${{ inputs.use_zen_tools && format('{
              "mcpServers": {
                "zen": {
                  "command": "sh",
                  "args": [
                    "-c", 
                    "python -m pip install --user uv && export PATH=$PATH:$HOME/.local/bin && uvx --from git+https://github.com/BeehiveInnovations/zen-mcp-server.git zen-mcp-server"
                  ],
                  "env": {
                    "PATH": "/usr/local/bin:/usr/bin:/bin:/opt/homebrew/bin:$HOME/.local/bin",
                    "GOOGLE_API_KEY": "{0}",
                    "OPENAI_API_KEY": "{1}"
                  }
                }
              }
            }', secrets.GOOGLE_API_KEY, secrets.OPENAI_API_KEY) || '{}' }}
          
          # Allowed tools
          allowed_tools: |
            ${{ inputs.use_zen_tools && 'mcp__zen__codereview,mcp__zen__secaudit,mcp__zen__analyze,mcp__zen__testgen,mcp__zen__debug,mcp__zen__refactor,mcp__zen__chat,mcp__zen__consensus,mcp__zen__thinkdeep,mcp__zen__planner,mcp__zen__precommit,mcp__zen__tracer,mcp__zen__docgen,mcp__zen__challenge,mcp__zen__listmodels,mcp__zen__version,Bash,Edit,Read,Write,Glob,Grep,LS' || 'Bash,Edit,Read,Write,Glob,Grep,LS' }}
          
          # Environment variables for Claude
          claude_env: |
            REPOSITORY: ${{ github.repository }}
            ORGANIZATION: ${{ github.repository_owner }}
            REVIEW_FOCUS: ${{ inputs.review_focus }}